<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- 접속정보 properties 파일 읽어옴 -->		
	<context:property-placeholder location="classpath:properties/db.properties"/>
	
	<!-- 
		접속정보 객체 BasicDataSource bean 생성 
		namespaces p를 선언했다면
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource
		p:driverClassName=${driver} p:~~">
	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${passowrd}"/>
	</bean>
	<!-- 
		Mybatis SqlSessionFactory bean 생성 
		mybatis.jar 필요함
		mybatis-spring.jar 필요함
		
		mybatis는 두개의 정보 1)접속정보 2)mybatis에서 사용하는 환경(Alias, setting, Mapper)
	-->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis/configuration.xml"></property>
	</bean>
	
	<!-- Spring DI(의존적주입)을 위한 SqlSessionTemplate bean 생성 -->
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>
	
	<!-- 
		tx Transaction을 TransactionManager 생성 
		1) Annotation을 위한 설정 => servlet-context.xml <tx:annotation-driven>
		2) AOP 설정 => advice(실행되는메소드), pointcut(실행되는곳)
		
		spring-orm.jar
	-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	
</beans>
