<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.min.edu.model.JobsDynamicDaoImpl">

	<!-- Dynamic 쿼리는 MyBatis의 기능, 로직(Controller)에서 처리해야할 문법을 Mybatis를 통해서 처리 
		JSTL문법과 유사합니다 **주의사항 ** 판단 혹은 조건이 되는 값은 반드시 객체(VO/DTO, Map)에 담겨 있어야함 Primitive 
		type은 값(literal)만을 가지고 있기 때문에 판단 할 수 없다 -->

	<sql id="selAll">
		SELECT JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY
		FROM
		JOBS_TEMP jt
	</sql>

	<!-- IF문 조건판단 문을 사용하여ㅠ Map으로 입력 받은 값을 판단하여 실행 -->
	<select id="getJobsIf" parameterType="java.util.Map"
		resultType="JobVo">
		<include refid="selAll" />
		<where>
			<if test="job_id != 'IT_PROG'">
				JOB_ID = #{job_id}
			</if>
		</where>
	</select>

	<!-- java.util.List -->
	<!-- List는 foreach의 collection 속성을 반드시 list 소문자로 작성해야한다 -->
	<!-- 나중에 where태그로 변경해줄것 -->
	<select id="getJobsList" parameterType="java.util.List"
		resultType="JobVo">
		<include refid="selAll" />
		WHERE JOB_ID IN
		<foreach collection="list" item="job_id" open="("
			separator="," close=")">
			#{job_id}
		</foreach>
	</select>

	<!-- java.util.Map은 foreach의 collection을 반드시 전달반은 Map의 key값을 사용해야 한다. -->
	<select id="getJobsMap" parameterType="java.util.Map"
		resultType="JobVo">
		<include refid="selAll" />
		WHERE JOB_ID IN
		<foreach collection="job_ids" item="job_id" open="("
			separator="," close=")">
			#{job_id}
		</foreach>
	</select>

	<!-- 20211118 -->
	<!-- choose문 : 여러개의 조건 중에서 첫번째에 참이 나오는 조건에 동작함 database에서의 choose문 : case 
		when then else end java에서는 switch ~ case : 1.7이상에서는 String도 비교대상에 포함, 12이상에서는 
		다중으로 key값 *조건 A, B F, F 전체 검색 T, F A검색 F, T B검색 T, T A검색 -->
	<select id="getJobsChoose" parameterType="JobVo"
		resultType="JobVo">
		<include refid="selAll" />
		<where>
			<choose>
				<when test="job_id != null">
					JOB_ID = #{job_id}
				</when>
				<when test="job_title != null">
					JOB_TITLE = #{job_title}
				</when>
				<otherwise></otherwise>
			</choose>
		</where>
	</select>

	<!-- Trim A, B의 조건이 있다면 전체 A만 B만 A or/and B -->
	<select id="getJobsTrim" parameterType="JobVo"
		resultType="JobVo">
		<include refid="selAll" />
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="job_id != null">
				JOB_ID = #{job_id}
			</if>

			<if test="job_title != null">
				AND JOB_TITLE = #{job_title}
			</if>
		</trim>
	</select>

	<!-- SET tag를 사용하여 update set 컬럼=값 입력값의 갯수가 다른경우 -->
	<update id="updateJobsSet" parameterType="JobVo">
		UPDATE JOBS_TEMP
		<set>
			<if test="job_title != null">
				JOB_TITLE = #{job_title},
			</if>
			<if test="min_salary > 0">
				MIN_SALARY = #{min_salary}
			</if>
		</set>
		WHERE JOB_ID = 'IT_PROG'
	</update>
	
	<update id="updateJobsTrim" parameterType="JobVo">
		UPDATE JOBS_TEMP
		<trim prefix="SET" suffixOverrides=",">
			<if test="job_title != null">
				JOB_TITLE = #{job_title},
			</if>
			<if test="min_salary > 0">
				MIN_SALARY = #{min_salary},
			</if>
		</trim>
		WHERE JOB_ID = 'IT_PROG'
	</update>
</mapper>