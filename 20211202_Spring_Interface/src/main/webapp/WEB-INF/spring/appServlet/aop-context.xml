<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

<!-- advice 작동이 되는 메소드 -->
<!-- spring-container에서 작동하려면 다 bean으로 만들어줘야한다. -->
<bean id="logExecute" class="com.min.edu.aop.DaoLogExecute"></bean>

<!-- 
	aop 환경설정 
	cc + ccc => weaver : auto-proxy가 weaver함 == <context:component-scan/>이 한다.
	joinpoint, pointcut(expression(을 작성하는 문서 : Execution))
-->
<!-- advisor는 이미 잡혀있음 -->
<!-- throwing : DaoLogExecute에서의 error메소드의 파라미터와 이름이 같아야 한다 -->
<!-- init-param임. context-param : 단독으로 실행될수있는 느낌 -->
<aop:config>
	<aop:pointcut expression="execution(public * com.min.edu.model.*Dao*.*(..))" id="daologPoint"/>
	<aop:aspect ref="logExecute">
		<aop:before method="before" pointcut-ref="daologPoint"/>
		<aop:after-throwing method="error" pointcut-ref="daologPoint" throwing="exception"/>
	</aop:aspect>
</aop:config>



</beans>
