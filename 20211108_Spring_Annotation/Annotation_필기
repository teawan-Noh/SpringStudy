

Spring Annotation
	- Annotation은 java 1.5부터 지원을 한다.
	- Spring Annotation을 이용해서 bean과 관련된 설정을 할 수 있다
	
Spring FrameWork을 이용하여 Annotation 구문을 사용하려면 
다음과 같은 설정이 필요합니다	
	1.CommonAnnotationBeanProcessor 클래스를 설정파일에 빈객체로 등록
		<bean class="orp.springframework.context.annotation.CommonAnnotationBeanProcessor"/>
	2.<context:annotation-config>
	3.<context:component-scan base-package=""/>  base-package에 하위에 있는 모든 Annotation을 bean으로 등록해준다 
	
	현재는 회사에서 주로 2,3번 방법을 많이 사용
	MVC - 2번 / 모든 Annotation을 bean으로 자동등록 - 3번
	
	servlet-context.xml - spring bean에 등록이 되어 있습니다.
	
Spring Framework을 개발하기 어려운 이유
	- 모든 기능을 annotation 기법으로 선언을 해 놨기 때문에
	- servlet의 기반으로 되어있고 + Design pattern을 라이브러리로 뭉쳐서 만들어 놓음 
	- MVC1 과 MVC2(3 tier) Pattern의 차이점 
		MVC1 : 하나의 화면에 하나의 기능이 뭉쳐 있음 <%java 소스%> <%쿼리%> <javascript> <html>  이 한뭉탱이로 있음
		MVC2 : Model ,View, Controller 가 나눠져 있다
	 	 - Model : Dao(Data Access Object), JDBC, Persistance Layer(Mybatis)
	 	 - Controller : Logic - Extends HttpServlet - doGet(HttpServletRequest, HttpServletResponse),doPost()
		 - View : JSP(Java Server Page)
	- 요청(Protocol)과 객체 또는 메소드 맵핑을 명확하게 할 수 있다.
	
4개의 스테레오타입 어노테이션(기본) : annotation bean을 포함하여 생성
	@Component : 스테레오타입 최고 상위 객체
	@Controller : Spring MVC에서 컨트롤러 라고 인식
	@Service : 역할 부여 없이 스켄대상이 됨. 비지니스 클레스
	@Repository : 일반 DAO에 사용됨
	
-------------------------------------------------------------------------------------------------------------------------

1. @Component
	패키지 : org.springframework.stereotype
	기능 : 클래스에 선언하여 해당 클레스가 bean으로 등록되도록 함
		 bean의 이름은 지정해주지 않으면 해당 클레스명을 hungarian방식을 통해 사용된다. 
		 범위 : Singleton이며 @Scope를 사용하여 지정하기도 한다
		**Singleton Design patter : 메모리에 객체를 한번만 생성하는 방법 
		: static(static은 클레스에 선언할 수 없는 단점이 있음)

2. @Autowired
	패키지 : org.springframework.beans.factory.aanotation
	오토와이어링(auto-wiring) : spring의 의존관계(DI)를 자동으로 설정할 때 사용
	**@Autowired vs Resource : 객체(bean)이 없다면 Resource는 null로 찍지만 Autowired는 예외(에러)가 발생함
	적용 : set/ 생성자/ 메소드 주입 세곳에서 적용가능
	
	@Qualifier를 사용하면 동일 타입중에서 같은 타입이 2개이상 존재하게 되면 처리할 수 있도록 도와줌
	

3. @Qualifier
	 패키지: org.springframework.beans.factory.annotation
	 @Autowired가 기반입니다. 두개의 동일타입이 존재할 때 생성된 bean객체중 하나의 특정빈을 선택 할 수 있도록 해줌.
	 ===> @Resource를 사용하는 경우가 일반적.
	 
4. @Required
	패키지 : org.springframework.beans.factory.annotation
	@Component에 필수적으로 사용되어야 할 set 메서드에 선언하여 
	bean을 생성시 필수값으로 만듦
	===> 오류의 형태는 Set, nameUser
	
5. @Resource
	자바6 버전에서 javax에 추가 되서 1.8까지 사용 했었으나
	java11버전에서는 제외되었다
	javax.annotation-api.jar를 필요로 한다.
	여러개의 같은 타입의 bean이 있을 경우 해당 bean의 id를 name으로 사용하여 선언 : @Resource(name ="beanName")
	
	--------------------------------------------------------------------------------------------------------------------
패키지 : org.springframework.stereotype	
1. @Component
	
	@Component 
		: 스테레오타입 최고 상위 객체
	@Controller 
		: mapping되어지는 요청(get,post,put,delete..)을 처리하는 분기 로직
	@Service 
		: 비지니스 로직
	@Repository 
		: 데이터베이스와 연동하여 결과값을 출력해줌	
	
	
	
	
	
	